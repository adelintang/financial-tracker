generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Currency {
  IDR
  USD
}

enum Role {
  ADMIN
  USER
}

enum TransactionType {
  EXPENSE
  INCOME
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  name        String
  password    String
  currency    Currency
  role        Role
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  Transaction Transaction[]
  Investment  Investment[]
  Report      Report[]

  @@index([email, name])
  @@map("users")
}

model Category {
  id          Int             @id @default(autoincrement())
  name        String          @unique @db.VarChar(100)
  type        TransactionType
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
  Transaction Transaction[]

  @@index([name, type])
  @@map("categories")
}

model Transaction {
  id          String          @id @default(uuid())
  type        TransactionType
  amount      Int
  description String          @db.VarChar(200)
  createdAt   DateTime        @default(now()) @map("created_at")
  updatedAt   DateTime        @updatedAt @map("updated_at")
  userId      String          @map("user_id")
  categoryId  Int             @map("category_id")
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category        @relation(fields: [categoryId], references: [id])

  @@index([type, description, createdAt])
  @@map("transactions")
}

model InvestmentType {
  id         Int          @id @default(autoincrement())
  type       String       @unique @db.VarChar(100)
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")
  Investment Investment[]

  @@index([type])
  @@map("investment_types")
}

model Investment {
  id               String         @id @default(uuid())
  name             String         @db.VarChar(100)
  amount           Int
  valueBuy         Int            @map("value_buy")
  profitLoss       Int?           @map("profit_loss")
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @updatedAt @map("updated_at")
  userId           String
  investmentTypeId Int
  user             User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  investmentType   InvestmentType @relation(fields: [investmentTypeId], references: [id])

  @@index([name, createdAt])
  @@map("investments")
}

model Report {
  id               String   @id @default(uuid())
  totalIncome      Int
  totalExpense     Int
  investmentGrowth Int?
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  userId           String
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([createdAt])
  @@map("reports")
}

model Otp {
  id         String   @id @default(uuid())
  number     Int
  expriredIn DateTime @default(now())
  isActive   Boolean  @default(false)
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("otps")
}
